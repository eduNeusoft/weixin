// Zepto 1.1.4 (generated with Zepto Builder) - zepto event ajax form ie touch deferred callbacks data - zeptojs.com/license 
var Zepto = function() {
    function t(t) {
        return null == t ? t + "": V[X.call(t)] || "object"
    }
    function e(e) {
        return "function" == t(e)
    }
    function n(t) {
        return null != t && t == t.window
    }
    function r(t) {
        return null != t && t.nodeType == t.DOCUMENT_NODE
    }
    function i(e) {
        return "object" == t(e)
    }
    function o(t) {
        return i(t) && !n(t) && Object.getPrototypeOf(t) == Object.prototype
    }
    function a(t) {
        return "number" == typeof t.length
    }
    function s(t) {
        return O.call(t,
        function(t) {
            return null != t
        })
    }
    function u(t) {
        return t.length > 0 ? T.fn.concat.apply([], t) : t
    }
    function c(t) {
        return t.replace(/::/g, "/").replace(/([A-Z]+)([A-Z][a-z])/g, "$1_$2").replace(/([a-z\d])([A-Z])/g, "$1_$2").replace(/_/g, "-").toLowerCase()
    }
    function l(t) {
        return t in D ? D[t] : D[t] = RegExp("(^|\\s)" + t + "(\\s|$)")
    }
    function f(t, e) {
        return "number" != typeof e || Z[c(t)] ? e: e + "px"
    }
    function h(t) {
        var e, n;
        return A[t] || (e = M.createElement(t), M.body.appendChild(e), n = getComputedStyle(e, "").getPropertyValue("display"), e.parentNode.removeChild(e), "none" == n && (n = "block"), A[t] = n),
        A[t]
    }
    function p(t) {
        return "children" in t ? P.call(t.children) : T.map(t.childNodes,
        function(t) {
            return 1 == t.nodeType ? t: w
        })
    }
    function d(t, e, n) {
        for (E in e) n && (o(e[E]) || G(e[E])) ? (o(e[E]) && !o(t[E]) && (t[E] = {}), G(e[E]) && !G(t[E]) && (t[E] = []), d(t[E], e[E], n)) : e[E] !== w && (t[E] = e[E])
    }
    function m(t, e) {
        return null == e ? T(t) : T(t).filter(e)
    }
    function g(t, n, r, i) {
        return e(n) ? n.call(t, r, i) : n
    }
    function v(t, e, n) {
        null == n ? t.removeAttribute(e) : t.setAttribute(e, n)
    }
    function y(t, e) {
        var n = t.className || "",
        r = n && n.baseVal !== w;
        return e === w ? r ? n.baseVal: n: (r ? n.baseVal = e: t.className = e, w)
    }
    function x(t) {
        var e;
        try {
            return t ? "true" == t || ("false" == t ? !1 : "null" == t ? null: /^0/.test(t) || isNaN(e = Number(t)) ? /^[\[\{]/.test(t) ? T.parseJSON(t) : t: e) : t
        } catch(n) {
            return t
        }
    }
    function b(t, e) {
        e(t);
        for (var n = 0,
        r = t.childNodes.length; r > n; n++) b(t.childNodes[n], e)
    }
    var w, E, T, j, C, S, N = [],
    P = N.slice,
    O = N.filter,
    M = window.document,
    A = {},
    D = {},
    Z = {
        "column-count": 1,
        columns: 1,
        "font-weight": 1,
        "line-height": 1,
        opacity: 1,
        "z-index": 1,
        zoom: 1
    },
    L = /^\s*<(\w+|!)[^>]*>/,
    k = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
    _ = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
    R = /^(?:body|html)$/i,
    $ = /([A-Z])/g,
    F = ["val", "css", "html", "text", "data", "width", "height", "offset"],
    z = ["after", "prepend", "before", "append"],
    q = M.createElement("table"),
    W = M.createElement("tr"),
    H = {
        tr: M.createElement("tbody"),
        tbody: q,
        thead: q,
        tfoot: q,
        td: W,
        th: W,
        "*": M.createElement("div")
    },
    U = /complete|loaded|interactive/,
    I = /^[\w-]*$/,
    V = {},
    X = V.toString,
    B = {},
    Y = M.createElement("div"),
    J = {
        tabindex: "tabIndex",
        readonly: "readOnly",
        "for": "htmlFor",
        "class": "className",
        maxlength: "maxLength",
        cellspacing: "cellSpacing",
        cellpadding: "cellPadding",
        rowspan: "rowSpan",
        colspan: "colSpan",
        usemap: "useMap",
        frameborder: "frameBorder",
        contenteditable: "contentEditable"
    },
    G = Array.isArray ||
    function(t) {
        return t instanceof Array
    };
    return B.matches = function(t, e) {
        if (!e || !t || 1 !== t.nodeType) return ! 1;
        var n = t.webkitMatchesSelector || t.mozMatchesSelector || t.oMatchesSelector || t.matchesSelector;
        if (n) return n.call(t, e);
        var r, i = t.parentNode,
        o = !i;
        return o && (i = Y).appendChild(t),
        r = ~B.qsa(i, e).indexOf(t),
        o && Y.removeChild(t),
        r
    },
    C = function(t) {
        return t.replace(/-+(.)?/g,
        function(t, e) {
            return e ? e.toUpperCase() : ""
        })
    },
    S = function(t) {
        return O.call(t,
        function(e, n) {
            return t.indexOf(e) == n
        })
    },
    B.fragment = function(t, e, n) {
        var r, i, a;
        return k.test(t) && (r = T(M.createElement(RegExp.$1))),
        r || (t.replace && (t = t.replace(_, "<$1></$2>")), e === w && (e = L.test(t) && RegExp.$1), e in H || (e = "*"), a = H[e], a.innerHTML = "" + t, r = T.each(P.call(a.childNodes),
        function() {
            a.removeChild(this)
        })),
        o(n) && (i = T(r), T.each(n,
        function(t, e) {
            F.indexOf(t) > -1 ? i[t](e) : i.attr(t, e)
        })),
        r
    },
    B.Z = function(t, e) {
        return t = t || [],
        t.__proto__ = T.fn,
        t.selector = e || "",
        t
    },
    B.isZ = function(t) {
        return t instanceof B.Z
    },
    B.init = function(t, n) {
        var r;
        if (!t) return B.Z();
        if ("string" == typeof t) if (t = t.trim(), "<" == t[0] && L.test(t)) r = B.fragment(t, RegExp.$1, n),
        t = null;
        else {
            if (n !== w) return T(n).find(t);
            r = B.qsa(M, t)
        } else {
            if (e(t)) return T(M).ready(t);
            if (B.isZ(t)) return t;
            if (G(t)) r = s(t);
            else if (i(t)) r = [t],
            t = null;
            else if (L.test(t)) r = B.fragment(t.trim(), RegExp.$1, n),
            t = null;
            else {
                if (n !== w) return T(n).find(t);
                r = B.qsa(M, t)
            }
        }
        return B.Z(r, t)
    },
    T = function(t, e) {
        return B.init(t, e)
    },
    T.extend = function(t) {
        var e, n = P.call(arguments, 1);
        return "boolean" == typeof t && (e = t, t = n.shift()),
        n.forEach(function(n) {
            d(t, n, e)
        }),
        t
    },
    B.qsa = function(t, e) {
        var n, i = "#" == e[0],
        o = !i && "." == e[0],
        a = i || o ? e.slice(1) : e,
        s = I.test(a);
        return r(t) && s && i ? (n = t.getElementById(a)) ? [n] : [] : 1 !== t.nodeType && 9 !== t.nodeType ? [] : P.call(s && !i ? o ? t.getElementsByClassName(a) : t.getElementsByTagName(e) : t.querySelectorAll(e))
    },
    T.contains = M.documentElement.contains ?
    function(t, e) {
        return t !== e && t.contains(e)
    }: function(t, e) {
        for (; e && (e = e.parentNode);) if (e === t) return ! 0;
        return ! 1
    },
    T.type = t,
    T.isFunction = e,
    T.isWindow = n,
    T.isArray = G,
    T.isPlainObject = o,
    T.isEmptyObject = function(t) {
        var e;
        for (e in t) return ! 1;
        return ! 0
    },
    T.inArray = function(t, e, n) {
        return N.indexOf.call(e, t, n)
    },
    T.camelCase = C,
    T.trim = function(t) {
        return null == t ? "": String.prototype.trim.call(t)
    },
    T.uuid = 0,
    T.support = {},
    T.expr = {},
    T.map = function(t, e) {
        var n, r, i, o = [];
        if (a(t)) for (r = 0; t.length > r; r++) n = e(t[r], r),
        null != n && o.push(n);
        else for (i in t) n = e(t[i], i),
        null != n && o.push(n);
        return u(o)
    },
    T.each = function(t, e) {
        var n, r;
        if (a(t)) {
            for (n = 0; t.length > n; n++) if (e.call(t[n], n, t[n]) === !1) return t
        } else for (r in t) if (e.call(t[r], r, t[r]) === !1) return t;
        return t
    },
    T.grep = function(t, e) {
        return O.call(t, e)
    },
    window.JSON && (T.parseJSON = JSON.parse),
    T.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),
    function(t, e) {
        V["[object " + e + "]"] = e.toLowerCase()
    }),
    T.fn = {
        forEach: N.forEach,
        reduce: N.reduce,
        push: N.push,
        sort: N.sort,
        indexOf: N.indexOf,
        concat: N.concat,
        map: function(t) {
            return T(T.map(this,
            function(e, n) {
                return t.call(e, n, e)
            }))
        },
        slice: function() {
            return T(P.apply(this, arguments))
        },
        ready: function(t) {
            return U.test(M.readyState) && M.body ? t(T) : M.addEventListener("DOMContentLoaded",
            function() {
                t(T)
            },
            !1),
            this
        },
        get: function(t) {
            return t === w ? P.call(this) : this[t >= 0 ? t: t + this.length]
        },
        toArray: function() {
            return this.get()
        },
        size: function() {
            return this.length
        },
        remove: function() {
            return this.each(function() {
                null != this.parentNode && this.parentNode.removeChild(this)
            })
        },
        each: function(t) {
            return N.every.call(this,
            function(e, n) {
                return t.call(e, n, e) !== !1
            }),
            this
        },
        filter: function(t) {
            return e(t) ? this.not(this.not(t)) : T(O.call(this,
            function(e) {
                return B.matches(e, t)
            }))
        },
        add: function(t, e) {
            return T(S(this.concat(T(t, e))))
        },
        is: function(t) {
            return this.length > 0 && B.matches(this[0], t)
        },
        not: function(t) {
            var n = [];
            if (e(t) && t.call !== w) this.each(function(e) {
                t.call(this, e) || n.push(this)
            });
            else {
                var r = "string" == typeof t ? this.filter(t) : a(t) && e(t.item) ? P.call(t) : T(t);
                this.forEach(function(t) {
                    0 > r.indexOf(t) && n.push(t)
                })
            }
            return T(n)
        },
        has: function(t) {
            return this.filter(function() {
                return i(t) ? T.contains(this, t) : T(this).find(t).size()
            })
        },
        eq: function(t) {
            return - 1 === t ? this.slice(t) : this.slice(t, +t + 1)
        },
        first: function() {
            var t = this[0];
            return t && !i(t) ? t: T(t)
        },
        last: function() {
            var t = this[this.length - 1];
            return t && !i(t) ? t: T(t)
        },
        find: function(t) {
            var e, n = this;
            return e = t ? "object" == typeof t ? T(t).filter(function() {
                var t = this;
                return N.some.call(n,
                function(e) {
                    return T.contains(e, t)
                })
            }) : 1 == this.length ? T(B.qsa(this[0], t)) : this.map(function() {
                return B.qsa(this, t)
            }) : []
        },
        closest: function(t, e) {
            var n = this[0],
            i = !1;
            for ("object" == typeof t && (i = T(t)); n && !(i ? i.indexOf(n) >= 0 : B.matches(n, t));) n = n !== e && !r(n) && n.parentNode;
            return T(n)
        },
        parents: function(t) {
            for (var e = [], n = this; n.length > 0;) n = T.map(n,
            function(t) {
                return (t = t.parentNode) && !r(t) && 0 > e.indexOf(t) ? (e.push(t), t) : w
            });
            return m(e, t)
        },
        parent: function(t) {
            return m(S(this.pluck("parentNode")), t)
        },
        children: function(t) {
            return m(this.map(function() {
                return p(this)
            }), t)
        },
        contents: function() {
            return this.map(function() {
                return P.call(this.childNodes)
            })
        },
        siblings: function(t) {
            return m(this.map(function(t, e) {
                return O.call(p(e.parentNode),
                function(t) {
                    return t !== e
                })
            }), t)
        },
        empty: function() {
            return this.each(function() {
                this.innerHTML = ""
            })
        },
        pluck: function(t) {
            return T.map(this,
            function(e) {
                return e[t]
            })
        },
        show: function() {
            return this.each(function() {
                "none" == this.style.display && (this.style.display = ""),
                "none" == getComputedStyle(this, "").getPropertyValue("display") && (this.style.display = h(this.nodeName))
            })
        },
        replaceWith: function(t) {
            return this.before(t).remove()
        },
        wrap: function(t) {
            var n = e(t);
            if (this[0] && !n) var r = T(t).get(0),
            i = r.parentNode || this.length > 1;
            return this.each(function(e) {
                T(this).wrapAll(n ? t.call(this, e) : i ? r.cloneNode(!0) : r)
            })
        },
        wrapAll: function(t) {
            if (this[0]) {
                T(this[0]).before(t = T(t));
                for (var e; (e = t.children()).length;) t = e.first();
                T(t).append(this)
            }
            return this
        },
        wrapInner: function(t) {
            var n = e(t);
            return this.each(function(e) {
                var r = T(this),
                i = r.contents(),
                o = n ? t.call(this, e) : t;
                i.length ? i.wrapAll(o) : r.append(o)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                T(this).replaceWith(T(this).children())
            }),
            this
        },
        clone: function() {
            return this.map(function() {
                return this.cloneNode(!0)
            })
        },
        hide: function() {
            return this.css("display", "none")
        },
        toggle: function(t) {
            return this.each(function() {
                var e = T(this); (t === w ? "none" == e.css("display") : t) ? e.show() : e.hide()
            })
        },
        prev: function(t) {
            return T(this.pluck("previousElementSibling")).filter(t || "*")
        },
        next: function(t) {
            return T(this.pluck("nextElementSibling")).filter(t || "*")
        },
        html: function(t) {
            return 0 in arguments ? this.each(function(e) {
                var n = this.innerHTML;
                T(this).empty().append(g(this, t, e, n))
            }) : 0 in this ? this[0].innerHTML: null
        },
        text: function(t) {
            return 0 in arguments ? this.each(function(e) {
                var n = g(this, t, e, this.textContent);
                this.textContent = null == n ? "": "" + n
            }) : 0 in this ? this[0].textContent: null
        },
        attr: function(t, e) {
            var n;
            return "string" != typeof t || 1 in arguments ? this.each(function(n) {
                if (1 === this.nodeType) if (i(t)) for (E in t) v(this, E, t[E]);
                else v(this, t, g(this, e, n, this.getAttribute(t)))
            }) : this.length && 1 === this[0].nodeType ? !(n = this[0].getAttribute(t)) && t in this[0] ? this[0][t] : n: w
        },
        removeAttr: function(t) {
            return this.each(function() {
                1 === this.nodeType && v(this, t)
            })
        },
        prop: function(t, e) {
            return t = J[t] || t,
            1 in arguments ? this.each(function(n) {
                this[t] = g(this, e, n, this[t])
            }) : this[0] && this[0][t]
        },
        data: function(t, e) {
            var n = "data-" + t.replace($, "-$1").toLowerCase(),
            r = 1 in arguments ? this.attr(n, e) : this.attr(n);
            return null !== r ? x(r) : w
        },
        val: function(t) {
            return 0 in arguments ? this.each(function(e) {
                this.value = g(this, t, e, this.value)
            }) : this[0] && (this[0].multiple ? T(this[0]).find("option").filter(function() {
                return this.selected
            }).pluck("value") : this[0].value)
        },
        offset: function(t) {
            if (t) return this.each(function(e) {
                var n = T(this),
                r = g(this, t, e, n.offset()),
                i = n.offsetParent().offset(),
                o = {
                    top: r.top - i.top,
                    left: r.left - i.left
                };
                "static" == n.css("position") && (o.position = "relative"),
                n.css(o)
            });
            if (!this.length) return null;
            var e = this[0].getBoundingClientRect();
            return {
                left: e.left + window.pageXOffset,
                top: e.top + window.pageYOffset,
                width: Math.round(e.width),
                height: Math.round(e.height)
            }
        },
        css: function(e, n) {
            if (2 > arguments.length) {
                var r = this[0],
                i = getComputedStyle(r, "");
                if (!r) return;
                if ("string" == typeof e) return r.style[C(e)] || i.getPropertyValue(e);
                if (G(e)) {
                    var o = {};
                    return T.each(e,
                    function(t, e) {
                        o[e] = r.style[C(e)] || i.getPropertyValue(e)
                    }),
                    o
                }
            }
            var a = "";
            if ("string" == t(e)) n || 0 === n ? a = c(e) + ":" + f(e, n) : this.each(function() {
                this.style.removeProperty(c(e))
            });
            else for (E in e) e[E] || 0 === e[E] ? a += c(E) + ":" + f(E, e[E]) + ";": this.each(function() {
                this.style.removeProperty(c(E))
            });
            return this.each(function() {
                this.style.cssText += ";" + a
            })
        },
        index: function(t) {
            return t ? this.indexOf(T(t)[0]) : this.parent().children().indexOf(this[0])
        },
        hasClass: function(t) {
            return t ? N.some.call(this,
            function(t) {
                return this.test(y(t))
            },
            l(t)) : !1
        },
        addClass: function(t) {
            return t ? this.each(function(e) {
                if ("className" in this) {
                    j = [];
                    var n = y(this),
                    r = g(this, t, e, n);
                    r.split(/\s+/g).forEach(function(t) {
                        T(this).hasClass(t) || j.push(t)
                    },
                    this),
                    j.length && y(this, n + (n ? " ": "") + j.join(" "))
                }
            }) : this
        },
        removeClass: function(t) {
            return this.each(function(e) {
                if ("className" in this) {
                    if (t === w) return y(this, "");
                    j = y(this),
                    g(this, t, e, j).split(/\s+/g).forEach(function(t) {
                        j = j.replace(l(t), " ")
                    }),
                    y(this, j.trim())
                }
            })
        },
        toggleClass: function(t, e) {
            return t ? this.each(function(n) {
                var r = T(this),
                i = g(this, t, n, y(this));
                i.split(/\s+/g).forEach(function(t) { (e === w ? !r.hasClass(t) : e) ? r.addClass(t) : r.removeClass(t)
                })
            }) : this
        },
        scrollTop: function(t) {
            if (this.length) {
                var e = "scrollTop" in this[0];
                return t === w ? e ? this[0].scrollTop: this[0].pageYOffset: this.each(e ?
                function() {
                    this.scrollTop = t
                }: function() {
                    this.scrollTo(this.scrollX, t)
                })
            }
        },
        scrollLeft: function(t) {
            if (this.length) {
                var e = "scrollLeft" in this[0];
                return t === w ? e ? this[0].scrollLeft: this[0].pageXOffset: this.each(e ?
                function() {
                    this.scrollLeft = t
                }: function() {
                    this.scrollTo(t, this.scrollY)
                })
            }
        },
        position: function() {
            if (this.length) {
                var t = this[0],
                e = this.offsetParent(),
                n = this.offset(),
                r = R.test(e[0].nodeName) ? {
                    top: 0,
                    left: 0
                }: e.offset();
                return n.top -= parseFloat(T(t).css("margin-top")) || 0,
                n.left -= parseFloat(T(t).css("margin-left")) || 0,
                r.top += parseFloat(T(e[0]).css("border-top-width")) || 0,
                r.left += parseFloat(T(e[0]).css("border-left-width")) || 0,
                {
                    top: n.top - r.top,
                    left: n.left - r.left
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var t = this.offsetParent || M.body; t && !R.test(t.nodeName) && "static" == T(t).css("position");) t = t.offsetParent;
                return t
            })
        }
    },
    T.fn.detach = T.fn.remove,
    ["width", "height"].forEach(function(t) {
        var e = t.replace(/./,
        function(t) {
            return t[0].toUpperCase()
        });
        T.fn[t] = function(i) {
            var o, a = this[0];
            return i === w ? n(a) ? a["inner" + e] : r(a) ? a.documentElement["scroll" + e] : (o = this.offset()) && o[t] : this.each(function(e) {
                a = T(this),
                a.css(t, g(this, i, e, a[t]()))
            })
        }
    }),
    z.forEach(function(e, n) {
        var r = n % 2;
        T.fn[e] = function() {
            var e, i, o = T.map(arguments,
            function(n) {
                return e = t(n),
                "object" == e || "array" == e || null == n ? n: B.fragment(n)
            }),
            a = this.length > 1;
            return 1 > o.length ? this: this.each(function(t, e) {
                i = r ? e: e.parentNode,
                e = 0 == n ? e.nextSibling: 1 == n ? e.firstChild: 2 == n ? e: null;
                var s = T.contains(M.documentElement, i);
                o.forEach(function(t) {
                    if (a) t = t.cloneNode(!0);
                    else if (!i) return T(t).remove();
                    i.insertBefore(t, e),
                    s && b(t,
                    function(t) {
                        null == t.nodeName || "SCRIPT" !== t.nodeName.toUpperCase() || t.type && "text/javascript" !== t.type || t.src || window.eval.call(window, t.innerHTML)
                    })
                })
            })
        },
        T.fn[r ? e + "To": "insert" + (n ? "Before": "After")] = function(t) {
            return T(t)[e](this),
            this
        }
    }),
    B.Z.prototype = T.fn,
    B.uniq = S,
    B.deserializeValue = x,
    T.zepto = B,
    T
} ();
window.Zepto = Zepto,
void 0 === window.$ && (window.$ = Zepto),
function(t) {
    function e(e, n, r) {
        var i = t.Event(n);
        return t(e).trigger(i, r),
        !i.isDefaultPrevented()
    }
    function n(t, n, r, i) {
        return t.global ? e(n || y, r, i) : void 0
    }
    function r(e) {
        e.global && 0 === t.active++&&n(e, null, "ajaxStart")
    }
    function i(e) {
        e.global && !--t.active && n(e, null, "ajaxStop")
    }
    function o(t, e) {
        var r = e.context;
        return e.beforeSend.call(r, t, e) === !1 || n(e, r, "ajaxBeforeSend", [t, e]) === !1 ? !1 : (n(e, r, "ajaxSend", [t, e]), void 0)
    }
    function a(t, e, r, i) {
        var o = r.context,
        a = "success";
        r.success.call(o, t, a, e),
        i && i.resolveWith(o, [t, a, e]),
        n(r, o, "ajaxSuccess", [e, r, t]),
        u(a, e, r)
    }
    function s(t, e, r, i, o) {
        var a = i.context;
        i.error.call(a, r, e, t),
        o && o.rejectWith(a, [r, e, t]),
        n(i, a, "ajaxError", [r, i, t || e]),
        u(e, r, i)
    }
    function u(t, e, r) {
        var o = r.context;
        r.complete.call(o, e, t),
        n(r, o, "ajaxComplete", [e, r]),
        i(r)
    }
    function c() {}
    function l(t) {
        return t && (t = t.split(";", 2)[0]),
        t && (t == T ? "html": t == E ? "json": b.test(t) ? "script": w.test(t) && "xml") || "text"
    }
    function f(t, e) {
        return "" == e ? t: (t + "&" + e).replace(/[&?]{1,2}/, "?")
    }
    function h(e) {
        e.processData && e.data && "string" != t.type(e.data) && (e.data = t.param(e.data, e.traditional)),
        !e.data || e.type && "GET" != e.type.toUpperCase() || (e.url = f(e.url, e.data), e.data = void 0)
    }
    function p(e, n, r, i) {
        return t.isFunction(n) && (i = r, r = n, n = void 0),
        t.isFunction(r) || (i = r, r = void 0),
        {
            url: e,
            data: n,
            success: r,
            dataType: i
        }
    }
    function d(e, n, r, i) {
        var o, a = t.isArray(n),
        s = t.isPlainObject(n);
        t.each(n,
        function(n, u) {
            o = t.type(u),
            i && (n = r ? i: i + "[" + (s || "object" == o || "array" == o ? n: "") + "]"),
            !i && a ? e.add(u.name, u.value) : "array" == o || !r && "object" == o ? d(e, u, r, n) : e.add(n, u)
        })
    }
    var m, g, v = 0,
    y = window.document,
    x = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
    b = /^(?:text|application)\/javascript/i,
    w = /^(?:text|application)\/xml/i,
    E = "application/json",
    T = "text/html",
    j = /^\s*$/;
    t.active = 0,
    t.ajaxJSONP = function(e, n) {
        if (! ("type" in e)) return t.ajax(e);
        var r, i, u = e.jsonpCallback,
        c = (t.isFunction(u) ? u() : u) || "jsonp" + ++v,
        l = y.createElement("script"),
        f = window[c],
        h = function(e) {
            t(l).triggerHandler("error", e || "abort")
        },
        p = {
            abort: h
        };
        return n && n.promise(p),
        t(l).on("load error",
        function(o, u) {
            clearTimeout(i),
            t(l).off().remove(),
            "error" != o.type && r ? a(r[0], p, e, n) : s(null, u || "error", p, e, n),
            window[c] = f,
            r && t.isFunction(f) && f(r[0]),
            f = r = void 0
        }),
        o(p, e) === !1 ? (h("abort"), p) : (window[c] = function() {
            r = arguments
        },
        l.src = e.url.replace(/\?(.+)=\?/, "?$1=" + c), y.head.appendChild(l), e.timeout > 0 && (i = setTimeout(function() {
            h("timeout")
        },
        e.timeout)), p)
    },
    t.ajaxSettings = {
        type: "GET",
        beforeSend: c,
        success: c,
        error: c,
        complete: c,
        context: null,
        global: !0,
        xhr: function() {
            return new window.XMLHttpRequest
        },
        accepts: {
            script: "text/javascript, application/javascript, application/x-javascript",
            json: E,
            xml: "application/xml, text/xml",
            html: T,
            text: "text/plain"
        },
        crossDomain: !1,
        timeout: 0,
        processData: !0,
        cache: !0
    },
    t.ajax = function(e) {
        var n = t.extend({},
        e || {}),
        i = t.Deferred && t.Deferred();
        for (m in t.ajaxSettings) void 0 === n[m] && (n[m] = t.ajaxSettings[m]);
        r(n),
        n.crossDomain || (n.crossDomain = /^([\w-]+:)?\/\/([^\/]+)/.test(n.url) && RegExp.$2 != window.location.host),
        n.url || (n.url = "" + window.location),
        h(n);
        var u = n.dataType,
        p = /\?.+=\?/.test(n.url);
        if (p && (u = "jsonp"), n.cache !== !1 && (e && e.cache === !0 || "script" != u && "jsonp" != u) || (n.url = f(n.url, "_=" + Date.now())), "jsonp" == u) return p || (n.url = f(n.url, n.jsonp ? n.jsonp + "=?": n.jsonp === !1 ? "": "callback=?")),
        t.ajaxJSONP(n, i);
        var d, v = n.accepts[u],
        y = {},
        x = function(t, e) {
            y[t.toLowerCase()] = [t, e]
        },
        b = /^([\w-]+:)\/\//.test(n.url) ? RegExp.$1: window.location.protocol,
        w = n.xhr(),
        E = w.setRequestHeader;
        if (i && i.promise(w), n.crossDomain || x("X-Requested-With", "XMLHttpRequest"), x("Accept", v || "*/*"), (v = n.mimeType || v) && (v.indexOf(",") > -1 && (v = v.split(",", 2)[0]), w.overrideMimeType && w.overrideMimeType(v)), (n.contentType || n.contentType !== !1 && n.data && "GET" != n.type.toUpperCase()) && x("Content-Type", n.contentType || "application/x-www-form-urlencoded"), n.headers) for (g in n.headers) x(g, n.headers[g]);
        if (w.setRequestHeader = x, w.onreadystatechange = function() {
            if (4 == w.readyState) {
                w.onreadystatechange = c,
                clearTimeout(d);
                var e, r = !1;
                if (w.status >= 200 && 300 > w.status || 304 == w.status || 0 == w.status && "file:" == b) {
                    u = u || l(n.mimeType || w.getResponseHeader("content-type")),
                    e = w.responseText;
                    try {
                        "script" == u ? (1, eval)(e) : "xml" == u ? e = w.responseXML: "json" == u && (e = j.test(e) ? null: t.parseJSON(e))
                    } catch(o) {
                        r = o
                    }
                    r ? s(r, "parsererror", w, n, i) : a(e, w, n, i)
                } else s(w.statusText || null, w.status ? "error": "abort", w, n, i)
            }
        },
        o(w, n) === !1) return w.abort(),
        s(null, "abort", w, n, i),
        w;
        if (n.xhrFields) for (g in n.xhrFields) w[g] = n.xhrFields[g];
        var T = "async" in n ? n.async: !0;
        w.open(n.type, n.url, T, n.username, n.password);
        for (g in y) E.apply(w, y[g]);
        return n.timeout > 0 && (d = setTimeout(function() {
            w.onreadystatechange = c,
            w.abort(),
            s(null, "timeout", w, n, i)
        },
        n.timeout)),
		//alert(n.data);
        w.send(n.data ? n.data: null),
        w
    },
    t.get = function() {
        return t.ajax(p.apply(null, arguments))
    },
    t.post = function() {
        var e = p.apply(null, arguments);
        return e.type = "POST",
        t.ajax(e)
    },
    t.getJSON = function() {
        var e = p.apply(null, arguments);
        return e.dataType = "json",
        t.ajax(e)
    },
    t.fn.load = function(e, n, r) {
        if (!this.length) return this;
        var i, o = this,
        a = e.split(/\s/),
        s = p(e, n, r),
        u = s.success;
        return a.length > 1 && (s.url = a[0], i = a[1]),
        s.success = function(e) {
            o.html(i ? t("<div>").html(e.replace(x, "")).find(i) : e),
            u && u.apply(o, arguments)
        },
        t.ajax(s),
        this
    };
    var C = encodeURIComponent;
    t.param = function(t, e) {
        var n = [];
        return n.add = function(t, e) {
            this.push(C(t) + "=" + C(e))
        },
        d(n, t, e),
        n.join("&").replace(/%20/g, "+")
    }
} (Zepto),
function(t) {
    t.Callbacks = function(e) {
        e = t.extend({},
        e);
        var n, r, i, o, a, s, u = [],
        c = !e.once && [],
        l = function(t) {
            for (n = e.memory && t, r = !0, s = o || 0, o = 0, a = u.length, i = !0; u && a > s; ++s) if (u[s].apply(t[0], t[1]) === !1 && e.stopOnFalse) {
                n = !1;
                break
            }
            i = !1,
            u && (c ? c.length && l(c.shift()) : n ? u.length = 0 : f.disable())
        },
        f = {
            add: function() {
                if (u) {
                    var r = u.length,
                    s = function(n) {
                        t.each(n,
                        function(t, n) {
                            "function" == typeof n ? e.unique && f.has(n) || u.push(n) : n && n.length && "string" != typeof n && s(n)
                        })
                    };
                    s(arguments),
                    i ? a = u.length: n && (o = r, l(n))
                }
                return this
            },
            remove: function() {
                return u && t.each(arguments,
                function(e, n) {
                    for (var r; (r = t.inArray(n, u, r)) > -1;) u.splice(r, 1),
                    i && (a >= r && --a, s >= r && --s)
                }),
                this
            },
            has: function(e) {
                return ! (!u || !(e ? t.inArray(e, u) > -1 : u.length))
            },
            empty: function() {
                return a = u.length = 0,
                this
            },
            disable: function() {
                return u = c = n = void 0,
                this
            },
            disabled: function() {
                return ! u
            },
            lock: function() {
                return c = void 0,
                n || f.disable(),
                this
            },
            locked: function() {
                return ! c
            },
            fireWith: function(t, e) {
                return ! u || r && !c || (e = e || [], e = [t, e.slice ? e.slice() : e], i ? c.push(e) : l(e)),
                this
            },
            fire: function() {
                return f.fireWith(this, arguments)
            },
            fired: function() {
                return !! r
            }
        };
        return f
    }
} (Zepto),
function(t) {
    function e(e, r) {
        var u = e[s],
        c = u && i[u];
        if (void 0 === r) return c || n(e);
        if (c) {
            if (r in c) return c[r];
            var l = a(r);
            if (l in c) return c[l]
        }
        return o.call(t(e), r)
    }
    function n(e, n, o) {
        var u = e[s] || (e[s] = ++t.uuid),
        c = i[u] || (i[u] = r(e));
        return void 0 !== n && (c[a(n)] = o),
        c
    }
    function r(e) {
        var n = {};
        return t.each(e.attributes || u,
        function(e, r) {
            0 == r.name.indexOf("data-") && (n[a(r.name.replace("data-", ""))] = t.zepto.deserializeValue(r.value))
        }),
        n
    }
    var i = {},
    o = t.fn.data,
    a = t.camelCase,
    s = t.expando = "Zepto" + +new Date,
    u = [];
    t.fn.data = function(r, i) {
        return void 0 === i ? t.isPlainObject(r) ? this.each(function(e, i) {
            t.each(r,
            function(t, e) {
                n(i, t, e)
            })
        }) : 0 in this ? e(this[0], r) : void 0 : this.each(function() {
            n(this, r, i)
        })
    },
    t.fn.removeData = function(e) {
        return "string" == typeof e && (e = e.split(/\s+/)),
        this.each(function() {
            var n = this[s],
            r = n && i[n];
            r && t.each(e || r,
            function(t) {
                delete r[e ? a(this) : t]
            })
        })
    },
    ["remove", "empty"].forEach(function(e) {
        var n = t.fn[e];
        t.fn[e] = function() {
            var t = this.find("*");
            return "remove" === e && (t = t.add(this)),
            t.removeData(),
            n.call(this)
        }
    })
} (Zepto),
function(t) {
    function e(n) {
        var r = [["resolve", "done", t.Callbacks({
            once: 1,
            memory: 1
        }), "resolved"], ["reject", "fail", t.Callbacks({
            once: 1,
            memory: 1
        }), "rejected"], ["notify", "progress", t.Callbacks({
            memory: 1
        })]],
        i = "pending",
        o = {
            state: function() {
                return i
            },
            always: function() {
                return a.done(arguments).fail(arguments),
                this
            },
            then: function() {
                var n = arguments;
                return e(function(e) {
                    t.each(r,
                    function(r, i) {
                        var s = t.isFunction(n[r]) && n[r];
                        a[i[1]](function() {
                            var n = s && s.apply(this, arguments);
                            if (n && t.isFunction(n.promise)) n.promise().done(e.resolve).fail(e.reject).progress(e.notify);
                            else {
                                var r = this === o ? e.promise() : this,
                                a = s ? [n] : arguments;
                                e[i[0] + "With"](r, a)
                            }
                        })
                    }),
                    n = null
                }).promise()
            },
            promise: function(e) {
                return null != e ? t.extend(e, o) : o
            }
        },
        a = {};
        return t.each(r,
        function(t, e) {
            var n = e[2],
            s = e[3];
            o[e[1]] = n.add,
            s && n.add(function() {
                i = s
            },
            r[1 ^ t][2].disable, r[2][2].lock),
            a[e[0]] = function() {
                return a[e[0] + "With"](this === a ? o: this, arguments),
                this
            },
            a[e[0] + "With"] = n.fireWith
        }),
        o.promise(a),
        n && n.call(a, a),
        a
    }
    var n = Array.prototype.slice;
    t.when = function(r) {
        var i, o, a, s = n.call(arguments),
        u = s.length,
        c = 0,
        l = 1 !== u || r && t.isFunction(r.promise) ? u: 0,
        f = 1 === l ? r: e(),
        h = function(t, e, r) {
            return function(o) {
                e[t] = this,
                r[t] = arguments.length > 1 ? n.call(arguments) : o,
                r === i ? f.notifyWith(e, r) : --l || f.resolveWith(e, r)
            }
        };
        if (u > 1) for (i = Array(u), o = Array(u), a = Array(u); u > c; ++c) s[c] && t.isFunction(s[c].promise) ? s[c].promise().done(h(c, a, s)).fail(f.reject).progress(h(c, o, i)) : --l;
        return l || f.resolveWith(a, s),
        f.promise()
    },
    t.Deferred = e
} (Zepto),
function(t) {
    function e(t) {
        return t._zid || (t._zid = h++)
    }
    function n(t, n, o, a) {
        if (n = r(n), n.ns) var s = i(n.ns);
        return (g[e(t)] || []).filter(function(t) {
            return ! (!t || n.e && t.e != n.e || n.ns && !s.test(t.ns) || o && e(t.fn) !== e(o) || a && t.sel != a)
        })
    }
    function r(t) {
        var e = ("" + t).split(".");
        return {
            e: e[0],
            ns: e.slice(1).sort().join(" ")
        }
    }
    function i(t) {
        return RegExp("(?:^| )" + t.replace(" ", " .* ?") + "(?: |$)")
    }
    function o(t, e) {
        return t.del && !y && t.e in x || !!e
    }
    function a(t) {
        return b[t] || y && x[t] || t
    }
    function s(n, i, s, u, l, h, p) {
        var d = e(n),
        m = g[d] || (g[d] = []);
        i.split(/\s/).forEach(function(e) {
            if ("ready" == e) return t(document).ready(s);
            var i = r(e);
            i.fn = s,
            i.sel = l,
            i.e in b && (s = function(e) {
                var n = e.relatedTarget;
                return ! n || n !== this && !t.contains(this, n) ? i.fn.apply(this, arguments) : f
            }),
            i.del = h;
            var d = h || s;
            i.proxy = function(t) {
                if (t = c(t), !t.isImmediatePropagationStopped()) {
                    t.data = u;
                    var e = d.apply(n, t._args == f ? [t] : [t].concat(t._args));
                    return e === !1 && (t.preventDefault(), t.stopPropagation()),
                    e
                }
            },
            i.i = m.length,
            m.push(i),
            "addEventListener" in n && n.addEventListener(a(i.e), i.proxy, o(i, p))
        })
    }
    function u(t, r, i, s, u) {
        var c = e(t); (r || "").split(/\s/).forEach(function(e) {
            n(t, e, i, s).forEach(function(e) {
                delete g[c][e.i],
                "removeEventListener" in t && t.removeEventListener(a(e.e), e.proxy, o(e, u))
            })
        })
    }
    function c(e, n) {
        return (n || !e.isDefaultPrevented) && (n || (n = e), t.each(j,
        function(t, r) {
            var i = n[t];
            e[t] = function() {
                return this[r] = w,
                i && i.apply(n, arguments)
            },
            e[r] = E
        }), (n.defaultPrevented !== f ? n.defaultPrevented: "returnValue" in n ? n.returnValue === !1 : n.getPreventDefault && n.getPreventDefault()) && (e.isDefaultPrevented = w)),
        e
    }
    function l(t) {
        var e, n = {
            originalEvent: t
        };
        for (e in t) T.test(e) || t[e] === f || (n[e] = t[e]);
        return c(n, t)
    }
    var f, h = 1,
    p = Array.prototype.slice,
    d = t.isFunction,
    m = function(t) {
        return "string" == typeof t
    },
    g = {},
    v = {},
    y = "onfocusin" in window,
    x = {
        focus: "focusin",
        blur: "focusout"
    },
    b = {
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    };
    v.click = v.mousedown = v.mouseup = v.mousemove = "MouseEvents",
    t.event = {
        add: s,
        remove: u
    },
    t.proxy = function(n, r) {
        var i = 2 in arguments && p.call(arguments, 2);
        if (d(n)) {
            var o = function() {
                return n.apply(r, i ? i.concat(p.call(arguments)) : arguments)
            };
            return o._zid = e(n),
            o
        }
        if (m(r)) return i ? (i.unshift(n[r], n), t.proxy.apply(null, i)) : t.proxy(n[r], n);
        throw new TypeError("expected function")
    },
    t.fn.bind = function(t, e, n) {
        return this.on(t, e, n)
    },
    t.fn.unbind = function(t, e) {
        return this.off(t, e)
    },
    t.fn.one = function(t, e, n, r) {
        return this.on(t, e, n, r, 1)
    };
    var w = function() {
        return ! 0
    },
    E = function() {
        return ! 1
    },
    T = /^([A-Z]|returnValue$|layer[XY]$)/,
    j = {
        preventDefault: "isDefaultPrevented",
        stopImmediatePropagation: "isImmediatePropagationStopped",
        stopPropagation: "isPropagationStopped"
    };
    t.fn.delegate = function(t, e, n) {
        return this.on(e, t, n)
    },
    t.fn.undelegate = function(t, e, n) {
        return this.off(e, t, n)
    },
    t.fn.live = function(e, n) {
        return t(document.body).delegate(this.selector, e, n),
        this
    },
    t.fn.die = function(e, n) {
        return t(document.body).undelegate(this.selector, e, n),
        this
    },
    t.fn.on = function(e, n, r, i, o) {
        var a, c, h = this;
        return e && !m(e) ? (t.each(e,
        function(t, e) {
            h.on(t, n, r, e, o)
        }), h) : (m(n) || d(i) || i === !1 || (i = r, r = n, n = f), (d(r) || r === !1) && (i = r, r = f), i === !1 && (i = E), h.each(function(h, d) {
            o && (a = function(t) {
                return u(d, t.type, i),
                i.apply(this, arguments)
            }),
            n && (c = function(e) {
                var r, o = t(e.target).closest(n, d).get(0);
                return o && o !== d ? (r = t.extend(l(e), {
                    currentTarget: o,
                    liveFired: d
                }), (a || i).apply(o, [r].concat(p.call(arguments, 1)))) : f
            }),
            s(d, e, i, r, n, c || a)
        }))
    },
    t.fn.off = function(e, n, r) {
        var i = this;
        return e && !m(e) ? (t.each(e,
        function(t, e) {
            i.off(t, n, e)
        }), i) : (m(n) || d(r) || r === !1 || (r = n, n = f), r === !1 && (r = E), i.each(function() {
            u(this, e, r, n)
        }))
    },
    t.fn.trigger = function(e, n) {
        return e = m(e) || t.isPlainObject(e) ? t.Event(e) : c(e),
        e._args = n,
        this.each(function() {
            "dispatchEvent" in this ? this.dispatchEvent(e) : t(this).triggerHandler(e, n)
        })
    },
    t.fn.triggerHandler = function(e, r) {
        var i, o;
        return this.each(function(a, s) {
            i = l(m(e) ? t.Event(e) : e),
            i._args = r,
            i.target = s,
            t.each(n(s, e.type || e),
            function(t, e) {
                return o = e.proxy(i),
                i.isImmediatePropagationStopped() ? !1 : f
            })
        }),
        o
    },
    "focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error".split(" ").forEach(function(e) {
        t.fn[e] = function(t) {
            return t ? this.bind(e, t) : this.trigger(e)
        }
    }),
    ["focus", "blur"].forEach(function(e) {
        t.fn[e] = function(t) {
            return t ? this.bind(e, t) : this.each(function() {
                try {
                    this[e]()
                } catch(t) {}
            }),
            this
        }
    }),
    t.Event = function(t, e) {
        m(t) || (e = t, t = e.type);
        var n = document.createEvent(v[t] || "Events"),
        r = !0;
        if (e) for (var i in e)"bubbles" == i ? r = !!e[i] : n[i] = e[i];
        return n.initEvent(t, r, !0),
        c(n)
    }
} (Zepto),
function(t) {
    t.fn.serializeArray = function() {
        var e, n, r = [];
        return t([].slice.call(this.get(0).elements)).each(function() {
            e = t(this),
            n = e.attr("type"),
            "fieldset" != this.nodeName.toLowerCase() && !this.disabled && "submit" != n && "reset" != n && "button" != n && ("radio" != n && "checkbox" != n || this.checked) && r.push({
                name: e.attr("name"),
                value: e.val()
            })
        }),
        r
    },
    t.fn.serialize = function() {
        var t = [];
        return this.serializeArray().forEach(function(e) {
            t.push(encodeURIComponent(e.name) + "=" + encodeURIComponent(e.value))
        }),
        t.join("&")
    },
    t.fn.submit = function(e) {
        if (e) this.bind("submit", e);
        else if (this.length) {
            var n = t.Event("submit");
            this.eq(0).trigger(n),
            n.isDefaultPrevented() || this.get(0).submit()
        }
        return this
    }
} (Zepto),
function(t) {
    "__proto__" in {} || t.extend(t.zepto, {
        Z: function(e, n) {
            return e = e || [],
            t.extend(e, t.fn),
            e.selector = n || "",
            e.__Z = !0,
            e
        },
        isZ: function(e) {
            return "array" === t.type(e) && "__Z" in e
        }
    });
    try {
        getComputedStyle(void 0)
    } catch(e) {
        var n = getComputedStyle;
        window.getComputedStyle = function(t) {
            try {
                return n(t)
            } catch(e) {
                return null
            }
        }
    }
} (Zepto),
function(t) {
    function e(t, e, n, r) {
        return Math.abs(t - e) >= Math.abs(n - r) ? t - e > 0 ? "Left": "Right": n - r > 0 ? "Up": "Down"
    }
    function n() {
        l = null,
        h.last && (h.el.trigger("longTap"), h = {})
    }
    function r() {
        l && clearTimeout(l),
        l = null
    }
    function i() {
        s && clearTimeout(s),
        u && clearTimeout(u),
        c && clearTimeout(c),
        l && clearTimeout(l),
        s = u = c = l = null,
        h = {}
    }
    function o(t) {
        return ("touch" == t.pointerType || t.pointerType == t.MSPOINTER_TYPE_TOUCH) && t.isPrimary
    }
    function a(t, e) {
        return t.type == "pointer" + e || t.type.toLowerCase() == "mspointer" + e
    }
    var s, u, c, l, f, h = {},
    p = 750;
    t(document).ready(function() {
        var d, m, g, v, y = 0,
        x = 0;
        "MSGesture" in window && (f = new MSGesture, f.target = document.body),
        t(document).bind("MSGestureEnd",
        function(t) {
            var e = t.velocityX > 1 ? "Right": -1 > t.velocityX ? "Left": t.velocityY > 1 ? "Down": -1 > t.velocityY ? "Up": null;
            e && (h.el.trigger("swipe"), h.el.trigger("swipe" + e))
        }).on("touchstart MSPointerDown pointerdown",
        function(e) { (!(v = a(e, "down")) || o(e)) && (g = v ? e: e.touches[0], e.touches && 1 === e.touches.length && h.x2 && (h.x2 = void 0, h.y2 = void 0), d = Date.now(), m = d - (h.last || d), h.el = t("tagName" in g.target ? g.target: g.target.parentNode), s && clearTimeout(s), h.x1 = g.pageX, h.y1 = g.pageY, m > 0 && 250 >= m && (h.isDoubleTap = !0), h.last = d, l = setTimeout(n, p), f && v && f.addPointer(e.pointerId))
        }).on("touchmove MSPointerMove pointermove",
        function(t) { (!(v = a(t, "move")) || o(t)) && (g = v ? t: t.touches[0], r(), h.x2 = g.pageX, h.y2 = g.pageY, y += Math.abs(h.x1 - h.x2), x += Math.abs(h.y1 - h.y2))
        }).on("touchend MSPointerUp pointerup",
        function(n) { (!(v = a(n, "up")) || o(n)) && (r(), h.x2 && Math.abs(h.x1 - h.x2) > 30 || h.y2 && Math.abs(h.y1 - h.y2) > 30 ? c = setTimeout(function() {
                h.el.trigger("swipe"),
                h.el.trigger("swipe" + e(h.x1, h.x2, h.y1, h.y2)),
                h = {}
            },
            0) : "last" in h && (30 > y && 30 > x ? u = setTimeout(function() {
                var e = t.Event("tap");
                e.cancelTouch = i,
                h.el.trigger(e),
                h.isDoubleTap ? (h.el && h.el.trigger("doubleTap"), h = {}) : s = setTimeout(function() {
                    s = null,
                    h.el && h.el.trigger("singleTap"),
                    h = {}
                },
                250)
            },
            0) : h = {}), y = x = 0)
        }).on("touchcancel MSPointerCancel pointercancel", i),
        t(window).on("scroll", i)
    }),
    ["swipe", "swipeLeft", "swipeRight", "swipeUp", "swipeDown", "doubleTap", "tap", "singleTap", "longTap"].forEach(function(e) {
        t.fn[e] = function(t) {
            return this.on(e, t)
        }
    })
} (Zepto);